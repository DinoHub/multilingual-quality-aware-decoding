global {
    ducttape_output="/projects/tir4/users/pfernand/workflows-outputs/qaware-wmt20"
    ducttape_experimental_imports=true
    ducttape_experimental_submitters=true
    submitter="slurm"

    repo=/home/pfernand/repos/qaware-decoding/
    comet_dir=/projects/tir1/users/pfernand/comet-v3/

    train_dir=""
    devtest_dir=(
        TargetLang:
            de="/projects/tir1/corpora/sentence-mt/wmt20/en-de/"
            ru="/projects/tir1/corpora/sentence-mt/wmt20/en-ru/"
    )
    
    pretrained_model=(
        TargetLang:
            de="/projects/tir2/users/pfernand/models/wmt19.en-de.joined-dict.single_model/"
            ru="/projects/tir2/users/pfernand/models/wmt19.en-ru.single_model/"
    )
            
    is_multilingual=False
    bpe_type=fastbpe

    src_lang=en
    tgt_lang=(
        TargetLang:
            de="de"
            ru="ru"
    )

    # Decoding Arguments
    infer_batchsize=(
        NBest:
            5=64
            20=32
            50=16
            100=4
            200=2
    )
    sampling=(
        DecodeType:
            beam_search=false
            sampling=true
            nucleus_80=true
            nucleus_60=true
            nucleus_40=true
    )
    sampling_topp=(
        DecodeType:
            beam_search=""
            sampling=""
            nucleus_80=0.8
            nucleus_60=0.6
            nucleus_40=0.4
    )

    rerank=(
        Rerank:
            false=false
            fixed=fixed
            train=train
    )
    rerank_weights=(
        Rerank:
            false=""
            fixed="logprob=0 cometsrc=1"
            train="logprob=1 cometsrc=0.1"
    )

    nbest=(
        NBest:
            5=5
            20=20
            50=50
            100=100
            200=200
    )

    seed=9
}

plan Baseline {
    reach ScoreTranslations via (UsePretrained: true) * (TargetLang: *)
}

plan Rerank {
    reach GenerateTranslationsTest, GenerateTranslationsTest via (UsePretrained: true) * (TargetLang: *) * (DecodeType: *) * (Rerank: fixed) * (NBest: *)
}